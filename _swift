compdef swift

# typeset -A opt_args

# _swift() {
    # local -a commands build_flags
    # commands=(
    #     'build:compile packages and dependencies'
    #     'package:swift package manager'
    #     'test:test packages'
    # )

# local curcontext="$curcontext" state line  ret=1
# local -a _1st_arguments
_swift() {
    local -a commands

    commands=(
        '[files to compile]:file:_files'
        'build:build the package'
        'package:package management'
        'test:run tests'
    )

    _arguments \
        "1: :{_describe 'command' commands}" \
        '*:: :->args'

    case $state in
        args)
            case $words[1] in
                build)
                    _swift_build
                    ;;

                package)
                    _swift_package
                    ;;

                test)
                    ;;
            esac
            ;;
    esac
}

_swift_build() {
    _arguments -C \
        '-Xcc[compiler flags]' \
        '--configuration[configuration mode]:configuration:(debug release)'
}

_swift_package() {
local -a subcommands
            subcommands=(
                'init:Initialize a new git repo with support for the branching model.'
                'feature:Manage your feature branches.'
                'release:Manage your release branches.'
                'hotfix:Manage your hotfix branches.'
                'support:Manage your support branches.'
                'version:Shows version information.'
                'status:Shows some status.'
            )
            _describe -t commands 'git flow' subcommands
                # _arguments -C \
    #     ':init:' \
    #     '-Xcc[compiler flags]' \
    #     '--configuration[configuration mode]:configuration:(debug release)'
}

_swift
